

install.packages("ggplot2")                  # Install & load ggplot2
library("ggplot2")

library("stringr");
library("reshape2");

#

data <- read.table("C:/Users/luizantoniolao/Documents/GitHub/PACOTE/ils-clustering-main-experiment/data/Calibração/metricas/2-9metricas-50kEvals-20Instancias-050Perturb-DEVRef.csv", sep=";", header=TRUE);

RIGHT = function(x,n){
  substring(x,nchar(x)-n+1)
}


datanew <- data.frame(paste((str_count(data$solution,"\\,")+1)/2, 'Métricas'), data$instance, data$mojo, RIGHT(paste("00", data$nclasses, sep = ""), 3), data$besteval  )
	names(datanew) <- c("metrics", "instance", "mojo", "nclasses", "besteval")

datanew1 <- datanew[order(datanew$nclasses),]



#pdf(paste("C:/Users/luizantoniolao/Documents/GitHub/PACOTE/ils-clustering-main-experiment/data/Calibração/perturbacao/2-9metricas-10kEvals-20Instancias-025Perturb-MQref.csv.besteval.pdf", sep=";"), width=24,height=15)

 ggplot(datanew1, aes(nclasses, mojo)) +
     geom_boxplot(aes(fill = metrics)) +
 scale_x_discrete(guide = guide_axis(angle=90)) 
 
 
+ facet_wrap(metrics)
dev.off()
facet_wrap(metrics)



	data1 <- read.table("C:/Users/luizantoniolao/Documents/GitHub/PACOTE/ils-clustering-main-experiment/data/Calibração/metricas/2-9metricas-50kEvals-20Instancias-050Perturb-DEVRef.csv", sep=";", header=TRUE);

	#data25 <- read.table("C:/Users/luizantoniolao/Documents/GitHub/PACOTE/ils-clustering-main-experiment/data/Calibração/perturbacao/2-9metricas-10kEvals-20Instancias-025Perturb-MQref.csv", sep=";", header=TRUE);
	#data50 <- read.table("C:/Users/luizantoniolao/Documents/GitHub/PACOTE/ils-clustering-main-experiment/data/Calibração/perturbacao/2-9metricas-10kEvals-20Instancias-050Perturb-MQref.csv", sep=";", header=TRUE);
	#data75 <- read.table("C:/Users/luizantoniolao/Documents/GitHub/PACOTE/ils-clustering-main-experiment/data/Calibração/perturbacao/2-9metricas-10kEvals-20Instancias-075Perturb-MQref.csv", sep=";", header=TRUE);
	
	numClasses <- sort(unique(RIGHT(paste("00", as.character(data$nclasses), sep = ""), 3)));
	
	columns <- sort(unique(as.character(str_count(data[,4],",")/2)));

	result <- matrix(nrow=length(numClasses), ncol=length(columns), dimnames=list(numClasses, columns));
	
	resultwilcox <- matrix(nrow=length(numClasses), ncol=length(columns), dimnames=list(numClasses, columns));
	
	for (numClasses_ in numClasses)
	{
		for (columns_ in columns)
		{
			newdata <- subset(data, nclasses == as.numeric(numClasses_) & (str_count(data$solutionreal,",")/2) == columns_);
			
			result[numClasses_, columns_] <- mean(newdata$mojo);
		}
	}
	
	result;
	
	
	
	ggplot(data = data1, aes(x = nclasses, y = mojo, colour = str_count( solutionreal,","))) +
  geom_line() +
  facet_wrap(str_count( solutionreal,","))
	
	
	events1 <- c(7, 12, 28, 3, 41)
events2 <- c(17, 21, 18, 13, 22)
# Plot the bar chart.
plot(result, type = "o", col = "red", xlab = "Month", ylab = "Event Count",
main = "Event count chart")
lines(events2, type = "o", col = "blue")

	
	
	for (numClasses_ in numClasses)
	{
		for (columns_ in columns)
		{
			newdata25 <- subset(data25, nclasses == as.numeric(numClasses_) & (str_count(data25$solutionreal,",")/2) == columns_);
			newdata50 <- subset(data50, nclasses == as.numeric(numClasses_) & (str_count(data50$solutionreal,",")/2) == columns_);
			newdata75 <- subset(data75, nclasses == as.numeric(numClasses_) & (str_count(data75$solutionreal,",")/2) == columns_);
		
			resultwilcox[numClasses_, columns_] <- wilcox.test(newdata50$mojo,newdata75$mojo)$p.value
		}
	}
	
	
	
	
	
	
	
	for (numClasses_ in numClasses)
	{
		for (columns_ in columns)
		{
			newdata25 <- subset(data25, nclasses == as.numeric(numClasses_) & (str_count(data25$solutionreal,",")/2) == columns_);
			newdata50 <- subset(data50, nclasses == as.numeric(numClasses_) & (str_count(data50$solutionreal,",")/2) == columns_);
			newdata75 <- subset(data75, nclasses == as.numeric(numClasses_) & (str_count(data75$solutionreal,",")/2) == columns_);
			
			if (mean(newdata25$mojo)> mean(newdata50$mojo)){
				if (mean(newdata25$mojo)> mean(newdata75$mojo)){
					if(mean(newdata50$mojo)> mean(newdata75$mojo)){
						bestPertub <- "25>50"
						resultwilcox[numClasses_, columns_] <-  wilcox.test(newdata25$mojo,newdata50$mojo)$p.value
					} else {
						bestPertub <- "25>75"
						resultwilcox[numClasses_, columns_] <-  wilcox.test(newdata25$mojo,newdata75$mojo)$p.value
					}
					
				} else {	
					bestPertub <- "75>25"	
					resultwilcox[numClasses_, columns_] <-  wilcox.test(newdata75$mojo,newdata25$mojo)$p.value					
				}
			} else {
				if (mean(newdata50$mojo)> mean(newdata75$mojo)){
					if(mean(newdata75$mojo)> mean(newdata25$mojo)){
						bestPertub <- "50>75"
						resultwilcox[numClasses_, columns_] <-  wilcox.test(newdata50$mojo,newdata75$mojo)$p.value						
					}
					else {
						bestPertub <- "50>25"
						resultwilcox[numClasses_, columns_] <-  wilcox.test(newdata50$mojo,newdata25$mojo)$p.value
					}
				}
				else {
					bestPertub <- "75>50"
					resultwilcox[numClasses_, columns_] <-  wilcox.test(newdata75$mojo,newdata50$mojo)$p.value
				}
			}
			result[numClasses_, columns_] <- bestPertub;
		}
	}
	
	
			newdata25 <- subset(data25, nclasses == as.numeric("031") & (str_count(data25$solutionreal,",")/2) == 6);
			newdata75 <- subset(data75, nclasses == as.numeric("031") & (str_count(data75$solutionreal,",")/2) == 6);
			wilcox.test(newdata75$mojo , newdata25$mojo)
	
	